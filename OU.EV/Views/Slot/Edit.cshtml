@model OU.EV.Models.Slot

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Slot</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


        <div class="form-group">
            @Html.LabelFor(model => model.Vehicle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Vehicle, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EvOwner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EvOwner, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreeSpaces, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FreeSpaces, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FreeSpaces, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FreePoints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FreePoints, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FreePoints, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Arrival, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Arrival, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            </div>
        </div>

        <div id="sectionDuration">
            <div class="form-group onCharge">
                @Html.LabelFor(model => model.ChargeStartTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date datetime'>
                        @Html.EditorFor(model => model.ChargeStartTime, new { htmlAttributes = new { @class = "form-control", @placeholder = "DD/MM/YYYY HH:MM" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.ChargeStartTime, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group onCharge">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class='input-group date timeonly'>
                        @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @placeholder = "HH:MM" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-time"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(document).ready(function () {
            if ($('#Status').val() === "30") {
                $('#sectionDuration').show();
            } else {
                $('#sectionDuration').hide();
            }
        });

        $('.datetime').datetimepicker({
            locale: 'en-gb',
            sideBySide: true,
            stepping: 15
        });

        $('.timeonly').datetimepicker({
            locale: 'en-gb',
            format: 'LT',
            enabledHours: [0, 1, 2, 3, 4],
            minDate: moment({ hour: 0, minute: 15 }),
            maxDate: moment({ hour: 4, minute: 0 }),
            stepping: 15
        });

        $('#Status').change(function () {
            if ($(this).val() === "30") {
                $('#sectionDuration').show();
            } else {
                $('#sectionDuration').hide();
            }
        });
    </script>
}